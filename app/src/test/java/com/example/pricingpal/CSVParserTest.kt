package com.example.pricingpal;
import android.content.Context
import org.junit.BeforeClass;
import org.junit.Test;
import com.example.pricingpal.model.CSVReader;
import com.example.pricingpal.model.CSVParser;
import com.example.pricingpal.model.Category
import com.example.pricingpal.model.Item
import org.junit.Assert

public class CSVParserTest {
   // private lateinit var instrumentationContext: Context
    private var testListCategory = ArrayList<Category>()
    private var testListItems = ArrayList<Item>()


    @BeforeClass
    fun setUp(){
        val csvp = CSVParser
        val generatedCategory = csvp.PopulateData(testListItems)

    }
    /*
        * This test will compare a list of known  with a list of categories read
        * in and populated by the CSVParser's function PopulateData
     */
    @Test
   fun testGettingListOfCategories(){
        // series of items added to the test item array list to populate test category list
        testListItems.add(Item("clothing","shirt",5.00))
        testListItems.add(Item("clothing","shoes",8.00))
        testListItems.add(Item("clothing","jeans",13.47))
        testListItems.add(Item("clothing","jacket",14.00))

        // add the new category to the test category list that will be used to
        // compare the category list generated by the PopulateData function
        testListCategory.add(Category("clothing",testListItems))

        // series of items added to the test item array list to populate test category list
        testListItems.add(Item("jewelry","watch",8.00))
        testListItems.add(Item("jewelry","ring",10.00))
        testListItems.add(Item("jewelry","necklace",20.50))

        // add the new category to the test category list that will be used to
        // compare the category list generated by the PopulateData function
        testListCategory.add(Category("jewelry",testListItems))

        //Assert.assertTrue()
    }

    // boolean method used to compare the hard coded category list and the generated category list

}
